<?php

namespace src;

class ArbeitsBotMenu
{
    public $apiArbeits;
    public $apiTranslate;

    public function __construct()
    {
        $this->apiArbeits = new ApiArbetsformedlingen();
        $this->apiTranslate = new TranslateApi();
    }

    public function startMenu($chatId, $objTelegram)
    {
        $objTelegram->sendMessage([
            'chat_id' => $chatId,
            'text' => '–°–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä —Ä–µ—Å—É—Ä—Å–æ–≤:',
            'reply_markup' => json_encode([
                'inline_keyboard' => [
                    [
                        ['text' => 'Platsbanken (–ë–∞–Ω–∫ –ª–æ–∫–∞—Ü–∏–π)', 'callback_data' => Helper::arrayToString(['f'=>'showRegion'])],
                        ['text' => 'Externa webbplatser (–í–Ω–µ—à–Ω–∏–µ —Å–∞–π—Ç—ã)', 'callback_data' => 'webbplatser'],
                    ]
                ],
                'resize_keyboard' => true,
                'one_time_keyboard' => true
            ])
        ]);
    }

    public function showRegion($param)
    {
        $telegram = $param['telegram'];
        $chatId = $param['chat_id'];

        $getLocation = $this->apiArbeits->getLocation();

        $buttons = [];

        // –†–∞–∑–±–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏
        $columns = 2;
        $current_column = 0;
        $current_row = [];

        foreach ($getLocation as $item) {
            $id = $item['id'];
            $name = $item['name'];

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–æ–∫—É
            $current_row[] = ['text' => $name, 'callback_data' =>  Helper::arrayToString(['f'=>'showCity','r_id'=>$id])];

            // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ—Å—Ç–∏–≥–ª–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —à–∏—Ä–∏–Ω—ã, –¥–æ–±–∞–≤–ª—è–µ–º –µ–µ –≤ –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫ –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
            $current_column++;
            if ($current_column >= $columns) {
                $buttons[] = $current_row;
                $current_row = [];
                $current_column = 0;
            }
        }

        // –ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∞—Å—å –Ω–µ–ø–æ–ª–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, –¥–æ–±–∞–≤–ª—è–µ–º –µ–µ –≤ –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫
        if (!empty($current_row)) {
            $buttons[] = $current_row;
        }

        $telegram->sendMessage([
            'chat_id' => $chatId,
            'text' => '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω:',
            'reply_markup' => json_encode([
                'inline_keyboard' => $buttons
            ]),
        ]);
    }

    public function transSpec($param)
    {

        $telegram = $param['telegram'];
        $chatId = $param['chat_id'];
        $occupation_id = $param['ok_id'];
        $city_id = ['c_id'];

        $occupation = $this->apiArbeits->getOccupation();

        $occupationTranslate = Helper::specialistDataTranslate($occupation, $occupation_id, $this->apiTranslate);

        if ($occupationTranslate) {
            $buttons = [];
            $row = [];
            $columns = 2; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫

            foreach ($occupationTranslate as $item) {
                $id = $item['id'];
                $name = $item['name'];

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ —Ç–µ–∫—É—â–∏–π —Ä—è–¥
                $row[] = ['text' => $name, 'callback_data' =>  Helper::arrayToString(['f'=>'showResult','spec_id'=>$id,'c_id'=>$city_id])];

                // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Ä—è–¥ –∑–∞–ø–æ–ª–Ω–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫ –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ä—è–¥
                if (count($row) >= $columns) {
                    $buttons[] = $row;
                    $row = [];
                }
            }

            // –ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –∫–Ω–æ–ø–∫–∏ –≤ —Ç–µ–∫—É—â–µ–º —Ä—è–¥—É, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫
            if (!empty($row)) {
                $buttons[] = $row;
            }

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
            $telegram->sendMessage([
                'chat_id' => $chatId,
                'text' => '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:',
                'reply_markup' => json_encode([
                    'inline_keyboard' => $buttons
                ]),
            ]);

        }
    }


    public function showSpecialist($param)
    {
        $occupation_id = $param['ok_id'];
        $chatId = $param['chat_id'];
        $telegram = $param['telegram'];
        $city_id = $param['c_id'];

        $occupation = $this->apiArbeits->getOccupation();
        $buttons = [];

        // –£–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫
        $columns = 2;

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–∫—É—â–µ–π –∫–æ–ª–æ–Ω–∫–∏ –∏ —Å—Ç—Ä–æ–∫–∏
        $current_column = 0;
        $current_row = [];

        foreach ($occupation as $item) {
            if ($item['id'] == $occupation_id) {
                foreach ($item['items'] as $profession) {
                    $id = $profession['id'];
                    $name = $profession['name'];

                    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–æ–∫—É
                    $current_row[] = ['text' => $name, 'callback_data' => Helper::arrayToString(['f'=>'showResult','spec_id'=>$id,'c_id'=>$city_id])];

                    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Ç–µ–∫—É—â–µ–π –∫–æ–ª–æ–Ω–∫–∏
                    $current_column++;

                    // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è –∫–æ–ª–æ–Ω–∫–∞ –¥–æ—Å—Ç–∏–≥–ª–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —à–∏—Ä–∏–Ω—ã, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫ –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
                    if ($current_column >= $columns) {
                        $buttons[] = $current_row;
                        $current_row = [];
                        $current_column = 0;
                    }
                }
            }
        }

        // –ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∞—Å—å –Ω–µ–ø–æ–ª–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, –¥–æ–±–∞–≤–ª—è–µ–º –µ–µ –≤ –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫
        if (!empty($current_row)) {
            $buttons[] = $current_row;
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü–µ—Ä–µ–≤–µ—Å—Ç–∏" –≤ –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫
        $ukrainian_flag_unicode = "üá∫üá¶";
        $buttons[] = [[
            'text' => $ukrainian_flag_unicode . ' –ü–µ—Ä–µ–≤–µ—Å—Ç–∏:',
            'callback_data' => Helper::arrayToString(['f'=>'transSpec','ok_id'=>$occupation_id,'c_id'=>$city_id])
        ]];

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        $telegram->sendMessage([
            'chat_id' => $chatId,
            'text' => '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:',
            'reply_markup' => json_encode([
                'inline_keyboard' => $buttons
            ]),
        ]);
    }


    public function showCity($param)
    {

        $telegram = $param['telegram'];
        $region_id = $param['r_id'];
        $chatId = $param['chat_id'];

        $getLocation = $this->apiArbeits->getLocation();
        $buttons = [];

        // –†–∞–∑–±–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ –¥–≤–∞ —Ä—è–¥–∞
        $columns = 2;
        $current_column = 0;
        $current_row = [];

        foreach ($getLocation as $item) {
            if ($item['id'] == $region_id) {
                foreach ($item['items'] as $city) {
                    $id = $city['id'];
                    $name = $city['name'];

                    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ —Ç–µ–∫—É—â–∏–π —Ä—è–¥
                    $current_row[] = ['text' => $name, 'callback_data' =>  Helper::arrayToString(['f'=>'platsbankenShowOccupation','c_id'=>$id])];

                    // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Ä—è–¥ –¥–æ—Å—Ç–∏–≥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —à–∏—Ä–∏–Ω—ã, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫ –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ä—è–¥
                    $current_column++;
                    if ($current_column >= $columns) {
                        $buttons[] = $current_row;
                        $current_row = [];
                        $current_column = 0;
                    }
                }
            }
        }

        // –ï—Å–ª–∏ –æ—Å—Ç–∞–ª—Å—è –Ω–µ–ø–æ–ª–Ω—ã–π —Ä—è–¥, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫
        if (!empty($current_row)) {
            $buttons[] = $current_row;
        }

        $telegram->sendMessage([
            'chat_id' => $chatId,
            'text' => '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:',
            'reply_markup' => json_encode([
                'inline_keyboard' => $buttons
            ]),
        ]);
    }


    public function platsbankenShowOccupation($param)
    {
        $telegram = $param['telegram'];
        $city_id = $param['c_id'];
        $chatId = $param['chat_id'];
        $translate = $param['trans'];

        $occupation = $this->apiArbeits->getOccupation();
        if ($translate) {
            $translateApi = new TranslateApi();
            $occupation = Helper::occupationDataTranslate($occupation, $translateApi);
        }
        $buttons = [];

        // –†–∞–∑–±–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ –¥–≤–∞ —Ä—è–¥–∞
        $columns = 2;
        $current_column = 0;
        $current_row = [];

        foreach ($occupation as $item) {
            $id = $item['id'];
            $name = $item['name'];

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ —Ç–µ–∫—É—â–∏–π —Ä—è–¥
            $current_row[] = ['text' => $name, 'callback_data' => Helper::arrayToString(['f'=>'showSpecialist','ok_id'=>$id,'c_id'=>$city_id])];

            // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Ä—è–¥ –¥–æ—Å—Ç–∏–≥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —à–∏—Ä–∏–Ω—ã, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫ –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ä—è–¥
            $current_column++;
            if ($current_column >= $columns) {
                $buttons[] = $current_row;
                $current_row = [];
                $current_column = 0;
            }
        }

        // –ï—Å–ª–∏ –æ—Å—Ç–∞–ª—Å—è –Ω–µ–ø–æ–ª–Ω—ã–π —Ä—è–¥, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫
        if (!empty($current_row)) {
            $buttons[] = $current_row;
        }
        if (!$translate) {
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü–µ—Ä–µ–≤–µ—Å—Ç–∏" –≤ –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫
            $ukrainian_flag_unicode = "üá∫üá¶"; // Unicode —Å–∏–º–≤–æ–ª –¥–ª—è —É–∫—Ä–∞–∏–Ω—Å–∫–æ–≥–æ —Ñ–ª–∞–≥–∞
            $buttons[] = [[
                'text' => $ukrainian_flag_unicode . ' –ü–µ—Ä–µ–≤–µ—Å—Ç–∏:',
                'callback_data' =>  Helper::arrayToString(['f'=>'platsbankenShowOccupation','c_id'=>$city_id,'trans'=>true])

            ]];
        }
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        $telegram->sendMessage([
            'chat_id' => $chatId,
            'text' => '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:',
            'reply_markup' => json_encode([
                'inline_keyboard' => $buttons
            ]),
        ]);
    }


    public function showResult($param)
    {

        $telegram = $param['telegram'];
        $chatId = $param['chat_id'];
        $city_id = $param['c_id'];
        $specialist_id = $param['spec_id'];

        if (isset($param['st_index'])){
            $startIndex = $param['st_index'];
        }else{
            $startIndex = 0;
        }
        $getAll = $this->apiArbeits->showAll($startIndex, $city_id, $specialist_id);

        $numberOfAds = $getAll['numberOfAds'];

        if ($numberOfAds == 0) {
            $telegram->sendMessage([
                'chat_id' => $chatId,
                'text' => '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.'
            ]);
            return;
        }

        $this->buildMenuFromAds($getAll, $chatId, $telegram);

        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
        $totalPages = ceil($numberOfAds / 5);

        // –ï—Å–ª–∏ –≤—Å–µ–≥–æ –æ–¥–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤–ø–µ—Ä–µ–¥/–Ω–∞–∑–∞–¥
        if ($totalPages == 1) {
            $inlineKeyboard = [];
        } else {
            // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
            $inlineKeyboard = [];

            $left_button = ['text' => '‚Üê', 'callback_data' => Helper::arrayToString(['f'=>'showResult','st_index'=>$startIndex -5,'spec_id'=>$specialist_id,'c_id'=>$city_id])];
            $right_button = ['text' => '‚Üí', 'callback_data' => Helper::arrayToString(['f'=>'showResult','st_index'=>$startIndex +5,'spec_id'=>$specialist_id,'c_id'=>$city_id])];

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
            if ($startIndex > 0) {
                $inlineKeyboard[] = $left_button;
            }

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
            $currentPage = $startIndex / 5 + 1; // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            $page_button = ['text' => $currentPage . '/' . $totalPages, 'callback_data' => 'None'];
            $inlineKeyboard[] = $page_button;

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É "–í–ø–µ—Ä–µ–¥"
            if ($startIndex + 5 < $numberOfAds) {
                $inlineKeyboard[] = $right_button;
            }
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
            $telegram->sendMessage([
                'chat_id' => $chatId,
                'text' => '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
                'reply_markup' => json_encode(['inline_keyboard' => [$inlineKeyboard]])
            ]);
        }
    }


    public function buildMenuFromAds($ads, $chatId, $objTelegram)
    {
        foreach ($ads['ads'] as $ad) {
            // –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ–±—ä—è–≤–ª–µ–Ω–∏–∏
            $title = $ad['title'];
            $publishedDate = $ad['publishedDate'];
            $occupation = $ad['occupation'];
            $workplace = $ad['workplace'];
            $workplaceName = $ad['workplaceName'];
            $positions = $ad['positions'];

            $additionalInfo =
                "<b>–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:</b> " . $publishedDate . "\n" .
                "<b>–ü—Ä–æ—Ñ–µ—Å—Å–∏—è:</b> " . $occupation . "\n" .
                "<b>–ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã:</b> " . $workplace . "\n" .
                "<b>–ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞ —Ä–∞–±–æ—Ç—ã:</b> " . $workplaceName . "\n" .
                "<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π:</b> " . $positions;

            // –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            $messageText = "<b>$title</b>\n$additionalInfo";

            // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–¥—Ä–æ–±–Ω–µ–µ" –∏ –∫–Ω–æ–ø–∫—É "–°–∫—Ä—ã—Ç—å" –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
            $menu = [
                [
                    'text' => '‚è¨ –ü–æ–¥—Ä–æ–±–Ω–µ–µ',
                    'callback_data' => Helper::arrayToString(['f'=>'showOne','detail_id'=>$ad['id']]),
                ],
                [
                    'text' => '–°–∫—Ä—ã—Ç—å',
                    'callback_data' => json_encode(['unseen' => '']),
                ]
            ];

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –∏ –∫–Ω–æ–ø–∫–æ–π "–ü–æ–¥—Ä–æ–±–Ω–µ–µ" –∏ "–°–∫—Ä—ã—Ç—å"
            $objTelegram->sendMessage([
                'chat_id' => $chatId,
                'text' => $messageText,
                'reply_markup' => json_encode(['inline_keyboard' => [$menu]]),
                'parse_mode' => 'HTML',
            ]);
        }
    }


    public function showOneTranslate($chatId, $telegram, $key_board)
    {
        $ad = $this->apiArbeits->getOne($key_board);

        //newArray
        require __DIR__ . '/../settings/ArraySettings.php';

        $translate = Helper::processJobData($ad, $newArray);

        $translate = $this->apiTranslate->translate($translate);

        if (!empty($translate)) {
            $telegram->sendMessage([
                'chat_id' => $chatId,
                'text' => strip_tags($translate),
                'parse_mode' => 'HTML', // –≠—Ç–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Ç–µ–∫—Å—Ç –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞–ª—Å—è –∫–∞–∫ HTML
            ]);
        }
    }

    public function showOne($param)
    {
        $telegram = $param['telegram'];
        $chatId = $param['chat_id'];
        $key_board = $param['detail_id'];

        $ad = $this->apiArbeits->getOne($key_board);

        //newArray
        require __DIR__ . '/../settings/ArraySettings.php';

        $str = Helper::processJobData($ad, $newArrayUa);

        $telegram->sendMessage([
            'chat_id' => $chatId,
            'text' => $str,
            'parse_mode' => 'HTML', // –≠—Ç–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Ç–µ–∫—Å—Ç –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞–ª—Å—è –∫–∞–∫ HTML
        ]);

        $ukrainian_flag_unicode = "üá∫üá¶"; // Unicode —Å–∏–º–≤–æ–ª –¥–ª—è —É–∫—Ä–∞–∏–Ω—Å–∫–æ–≥–æ —Ñ–ª–∞–≥–∞

        $telegram->sendMessage([
            'chat_id' => $chatId,
            'text' => $ukrainian_flag_unicode . ' –ü–µ—Ä–µ–≤–µ—Å—Ç–∏:',
            'reply_markup' => json_encode([
                'inline_keyboard' => [
                    [
                        ['text' => $ukrainian_flag_unicode . ' –ü–µ—Ä–µ–≤–µ—Å—Ç–∏:', 'callback_data' => Helper::arrayToString(['f'=>'showOneTranslate','detail_id'=>$key_board])]
                    ]
                ]
            ]),
        ]);
    }
}